{"version":3,"sources":["components/NavBar.js","components/Landing.js","components/Login.js","components/UserFunctions.js","components/Register.js","components/Profile.js","components/NewsSources.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","react_default","a","createElement","className","Link","to","userLink","href","onClick","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","Component","withRouter","Landing","Login","_this","Object","classCallCheck","_super","call","state","username","password","onChange","assertThisInitialized","onSubmit","setState","defineProperty","target","name","value","_this2","user","axios","post","then","response","setItem","data","token","catch","err","console","log","login","res","error","noValidate","htmlFor","placeholder","key","text","Register","handleDropDown","event","urls","newUser","register","Dropdown","fluid","multiple","selection","options","Profile","decoded","jwt_decode","identity","listURLs","map","url","NewsSources","news_feeds","loading","get","feeds","entries","_ref","_ref2","slicedToArray","title","Card","Content","Header","extra","window","open","Button","basic","color","class","Group","App","BrowserRouter","NavBar","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19ec7a4f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Navbar extends Component {\n    logOut (e) {\n        e.preventDefault() // prevents default action of the logout\n        localStorage.removeItem('usertoken')\n        this.props.history.push(`/`) // this goes to the landing component\n    }\n\n    render () {\n        const loginRegLink = (\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\"> \n                        Login\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/register\" className=\"nav-link\">\n                        Register\n                    </Link>\n                </li>\n            </ul>\n        )\n\n        const userLink = (\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link to=\"/profile\" className=\"nav-link\">\n                        User\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/news_sources\" className=\"nav-link\">\n                        Your News\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"#\" onClick={this.logOut.bind(this)} className=\"nav-link\">\n                        Logout\n                    </a>\n                </li>\n            </ul>\n        )\n\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded\">\n                <button className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbar1\"\n                    aria-controls=\"navbar1\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse justify-content-md-center\"\n                    id=\"navbar1\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                Home\n                            </Link>\n                        </li>\n                    </ul>\n                    {localStorage.usertoken ? userLink : loginRegLink}\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Navbar)","import React, { Component } from 'react'\n\nclass Landing extends Component {\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mx-auto\">\n                        <h1 className=\"text-center\">WELCOME TO NEWS AGGREGATOR APP</h1>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { login } from './UserFunctions'\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            password: ''\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange (e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit (e) {\n        e.preventDefault()\n\n        const user = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        login(user).then(res => {\n            if (!res.error) {\n                this.props.history.push(`/profile`)\n            }\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username </label>\n                                <input type=\"username\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    placeholder=\"Enter username\"\n                                    value={this.state.username}\n                                    onChange={this.onChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password </label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange} />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\n                                Sign in\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import axios from 'axios'\n\n// newUser comes from the form\n// payload method is inside the post; accepts the payload\nexport const register = newUser => {\n    return axios\n        .post(\"api/register\", {\n            username: newUser.username,\n            password: newUser.password,\n            urls: newUser.urls\n        })\n        .then(response => {\n            console.log(\"Registered\")\n        })\n}\n\n// accepts an object\nexport const login = user => {\n    return axios\n        .post(\"api/login\", {\n            username: user.username,\n            password: user.password\n        })\n        .then(response => {\n            localStorage.setItem('usertoken', response.data.token)\n            return response.data.token\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n\nexport const getNews = user => {\n    return axios\n            .get('api/user/scrape')\n            .then(response => {\n                console.log(response);\n            })\n            .catch(err => {\n                // handle error\n                console.log(err);\n            })\n}","import React, { Component } from 'react'\nimport { register } from './UserFunctions'\nimport { Dropdown } from 'semantic-ui-react'\n\nconst data = [\n    { key: 'tech_radar', text: 'Tech Radar', value: 'Tech Radar' },\n    { key: 'medical', text: 'Medical News Today', value: 'Medical News Today' },\n    { key: 'buzzfeed', text: 'Buzz Feed News', value: 'BuzzFeed' },\n    { key: 'polygon', text: 'Polygon', value: 'Polygon' },\n    { key: 'espn', text: 'ESPN', value: 'ESPN' },\n\n];\n\nclass Register extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            password: '',\n            urls: []\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange (e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleDropDown = (event, data) => {\n        console.log(data.value)\n        this.setState({ urls: data.value })\n    }\n\n    onSubmit (e) {\n        e.preventDefault()\n\n        const newUser = {\n            username: this.state.username,\n            password: this.state.password,\n            urls: this.state.urls\n        }\n\n        console.log(newUser);\n\n        register(newUser).then(res => {\n            this.props.history.push(`/login`)\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username </label>\n                                <input type=\"username\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    placeholder=\"Enter Username\"\n                                    value={this.state.username}\n                                    onChange={this.onChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password </label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <Dropdown placeholder='News Sources' \n                                        onChange={this.handleDropDown}\n                                          fluid multiple selection options={data} />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\n                                Register\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Register","import React, { Component } from 'react'\nimport jwt_decode from 'jwt-decode'\n\nclass Profile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            urls:[]\n        }\n    }\n\n    componentDidMount () {\n        const token = localStorage.usertoken\n        const decoded = jwt_decode(token)\n        console.log(\"Check: \" + decoded.identity.urls)\n        this.setState({\n            username: decoded.identity.username,\n            urls: decoded.identity.urls\n        })\n    }\n\n    render () {\n        const URLS = this.state.urls;\n        const listURLs = URLS.map((url) =>\n        <ul>{url}</ul>\n        );\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mx-auto\">\n                        <h1 className=\"text-center\">PROFILE</h1>\n                    </div>\n                    <table className=\"table col-md-6 mx-auto\">\n                        <tbody>\n                            <tr>\n                                <td>Username</td>\n                                <ul>{this.state.username}</ul>\n                            </tr>\n                            <tr>\n                                <td>URLs</td>\n                                {listURLs}\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Button, Card, Loader, Segment, Dimmer } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass NewsSources extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            news_feeds:{},\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        const response = await axios.get('/api/user/scrape')\n        const feeds = response.data\n        this.setState({news_feeds: feeds, loading: false}) \n        console.log(this.state.news_feeds)\n       }\n\n    render() {\n        const posts = Object.entries(this.state.news_feeds)\n        const listURLs = posts.map(([title, url]) =>\n        <Card>\n            <Card.Content>\n                <Card.Header>{title}</Card.Header>\n            </Card.Content>\n            <Card.Content extra>\n            <Link to=\"route\" target=\"_blank\" onClick={(event) => {event.preventDefault(); window.open(url);}}>\n                        <Button basic color='green'>\n                            Go to Page\n                        </Button>\n            </Link>\n                    \n      </Card.Content>\n    </Card>\n        );\n\n        if (this.state.loading) {\n            return (\n                <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                        <div class=\"ui active inverted dimmer\">\n                            <div class=\"ui large text loader\">Loading</div>\n                        </div>\n                </div>\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                        <h1 className=\"text-center\">Your News For Today: </h1>\n                        <Card.Group>\n                            {listURLs}\n                        </Card.Group>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewsSources;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport NavBar from './components/NavBar'\nimport Landing from './components/Landing'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Profile from './components/Profile'\nimport NewsSources from './components/NewsSources'\n\nclass App extends Component {\n  render () {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Route exact path=\"/\" component={Landing} />\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/news_sources\" component={NewsSources} />\n            <Route exact path=\"/profile\" component={Profile} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}